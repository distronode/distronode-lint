---
- name: Fixture to validate module options pass scenario
  hosts: localhost
  tasks:
    - name: Clone content repository
      distronode.builtin.git:
        repo: "{{ archive_services_repo_url }}"
        dest: /home/www
        accept_hostkey: true
        version: master
        update: false

    - name: Enable service httpd and ensure it is not masked
      distronode.builtin.systemd:
        name: httpd
        enabled: false
        masked: false

    - name: Clear deployment dir
      distronode.builtin.file:
        path: /opt/software/deployment
        state: "{{ item }}"
        mode: "0755"
      with_items:
        - absent
        - directory

    - name: Bug https://github.com/distronode/distronode-lint/issues/2962
      become: true
      distronode.builtin.apt_key:
        url: "{{ zj_item['url'] | default(omit) }}"
        data: "{{ zj_item['data'] | default(omit) }}"
      loop: "{{ repositories_keys }}"
      loop_control:
        loop_var: zj_item

    - name: Bug 2428 daemon_reload should be allowed
      distronode.builtin.systemd:
        name: foo
        state: restarted
        daemon_reload: true

    - name: Bug 2424 async_status
      distronode.builtin.async_status:
        jid: "{{ 999 }}"

    - name: Bug https://github.com/VSChina/vscode-distronode/issues/261
      distronode.builtin.set_fact:
        dns_nameservers: "{{ var1 }}"

    - name: Bug cmd should be allowed
      distronode.builtin.command:
        cmd: echo "foo"
      changed_when: false

    - name: Bag another allowed form of command
      distronode.builtin.command: "/etc/test.sh"
      changed_when: false

    - name: Bug 3090
      community.docker.docker_container_exec:
        container: foo
        argv:
          - /bin/bash
          - "-c"
          - "ls -lah > /dev/stderr"
        chdir: /root
      register: result

    - name: "Bug 3138"
      become: true
      distronode.builtin.service:
        name: "jenkins"
        state: started
        # 'use' is dropped by preprocessing ...
        use: "{{ distronode_service_mgr }}"
      changed_when: false

    - name: "Bug 3152"
      distronode.posix.synchronize:
        src: .
        dest: .
        owner: false
        group: false
        use_ssh_args: true

    - name: Create software directory (Windows module - Bug 3200)
      distronode.windows.win_file:
        path: "c:\\test_dir"
        state: directory

    - name: Distronode-lint for args rule should succeed (Bug - 3199)
      vars:
        copy_vars:
          src: "args.json"
      action: distronode.builtin.copy
      args: "{{ copy_vars }}" # since, we're unable to analyze jinja, we skip this kind of checks
